[{"content":"","date":"2 mai 2025","externalUrl":null,"permalink":"/blog-cyber/","section":"Jaybird1291","summary":"","title":"Jaybird1291","type":"page"},{"content":"","date":"2 mai 2025","externalUrl":null,"permalink":"/blog-cyber/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"2 mars 2025","externalUrl":null,"permalink":"/blog-cyber/ja/tags/cyberdefenders/","section":"Tags","summary":"","title":"Cyberdefenders","type":"tags"},{"content":"","date":"2 mars 2025","externalUrl":null,"permalink":"/blog-cyber/ja/tags/hard/","section":"Tags","summary":"","title":"Hard","type":"tags"},{"content":" シナリオ # InfiniTech Solutions の IT 従業員が、自身のメールアカウントに関連する異常なアクティビティを報告しました。調査の結果、その従業員の業務用認証情報が、最近のデータ漏洩により流出していたことが判明しました。\n従業員は、業務用メールアドレスを使ってサードパーティのプラットフォームに登録したため、認証情報が露出してしまいました。攻撃者はこの認証情報を悪用し、従業員のメールアカウントにアクセス、社内の他の従業員へフィッシングメールを送信しました。\nあなたのタスクは、ログを解析し、攻撃の範囲を把握し、ユーザーがフィッシングメールとどのように関わったのかを特定し、フィッシングキャンペーンがネットワークに与えた影響を明らかにすることです。\nセットアップ # この調査シナリオでは、主に Splunk Search を使ってログを解析します。また、xml.onlineviewer、Cyberchef、VirusTotal といった他のツールも併用します。\n注意事項 # Splunk は、システム、アプリケーション、ネットワーク機器などが生成するデータを収集、インデックス化、検索するための解析プラットフォームです。エンドポイントにインストールされたエージェント、ログファイルの取り込み、あるいは API を通じてログを取得します。\n取得したデータはインデックス化され、整理されることで検索プロセスが容易になります。Splunk は、このデータを問い合わせるために SPL（Search Processing Language）を使用します。\n初期アクセス # 質問 1 # どのメールアカウントが侵害され、攻撃の発信に使われたのか？\nまず、システム上で利用可能な \u0026ldquo;sourcetypes\u0026rdquo; を確認してみましょう:\nindex=\u0026#34;main\u0026#34; | stats count by sourcetype Splunk の sourcetype は、収集されたイベントのデータタイプや発信元を示すラベルです。\nこの質問に答えるため、まず \u0026ldquo;syslog\u0026rdquo; に注目します。syslog は、様々なデバイスから生成されるログを集約し、システムやセキュリティの詳細な情報を含むことが多いです。\n情報が溢れ出すのを防ぐため、正規表現を用いてメールアドレスのみを表示するように検索します:\n* sourcetype=syslog | regex _raw=\u0026#34;[\\w\\.-]+@[\\w\\.-]+\\.\\w+\u0026#34; 大量のログが表示されるので、各メールアドレスの出現回数をカウントし、テーブル形式で結果を表示します:\n* sourcetype=syslog | rex field=_raw \u0026#34;(?\u0026lt;email\u0026gt;[\\w\\.-]+@[\\w\\.-]+\\.\\w+)\u0026#34; | stats count by email | sort -count | head 10 | rename count AS \u0026#34;Number of occurrences\u0026#34;, email AS \u0026#34;Email address\u0026#34; これをグラフで可視化することも可能です:\n回答: twhite@infinitechsolutions.xyz\n質問 2 # 侵害されたアカウントを特定した後、攻撃者は社内の他の従業員にフィッシングメールを送信しました。時系列順に、カンマ区切りでこれらの従業員の名前を教えてください。\nメール送信ログのフォーマットは以下の通りです:\nUser [sender_email] [IP_address]; Message [message_ID] for [recipient_email] 検索には以下のクエリを実行します:\n* sourcetype=syslog \u0026#34;User twhite@infinitechsolutions.xyz\u0026#34; | rex field=_raw \u0026#34;Message \u0026lt;[^\u0026gt;]+\u0026gt; for (?\u0026lt;recipient\u0026gt;[\\w\\.-]+@[\\w\\.-]+\\.\\w+)\u0026#34; | table _time recipient | sort _time | stats list(recipient) as recipients | eval recipients=mvjoin(recipients, \u0026#34;, \u0026#34;) このクエリにより、受信者が時系列順に抽出され、一覧表示されます。\n具体的には、侵害されたアカウントのユーザーを選択し、正規表現で受信者のメールアドレスを抽出して変数に格納しています。その後、結果を時系列で並べ替え、読みやすい形式に整えています。\n回答: rnichols,llopez,gbaker,ahall\n質問 3 # 侵害されたアカウントから送信された悪意のある添付ファイルの名前は何ですか？\nこの質問は、予想以上に手間取りました。最初は、以下のように検索しました:\n* sourcetype=syslog \u0026#34;User twhite@infinitechsolutions.xyz\u0026#34; | regex _raw=\u0026#34;for (rnichols|llopez|gbaker|ahall)@infinitechsolutions\\.xyz\u0026#34; しかし、添付ファイルの痕跡は一切見つかりませんでした。そこで、「ふむ、正しい sourcetype にいないのか、他のものも検索してみよう」と思い、次のクエリで検索しました:\nindex=* \u0026#34;twhite@infinitechsolutions.xyz\u0026#34; | stats count by sourcetype 利用可能な sourcetype は syslog のみなので、正しい場所にいることが分かります。それから、フォーマットの問題を回避するために、単にファイル拡張子を探す方法に切り替えました。\nChatGPT にファイル拡張子のリストを求めた結果、以下のクエリにたどり着きました:\nindex=* sourcetype=syslog twhite@infinitechsolutions.xyz | rex field=_raw \u0026#34;attachment=(?\u0026lt;malicious_attachment\u0026gt;[\\w\\.-]+\\.(exe|zip|pdf|docx|xlsm|js|vbs|scr|bat))\u0026#34; | table _time malicious_attachment | sort _time それでも添付ファイルは見つかりませんでした。\nどうしても行き詰まったので、別の視点から考えることにしました。ラボのタイトルが \u0026ldquo;Midnight RDP\u0026rdquo; であることから、これは「Midnight Blizzard」として知られる APT を思い出させました。\n調査中に、「How Midnight Blizzard Uses Malicious .RDP Files to Exploit Windows Systems: A Technical Guide」（著: Yua Mikanana）という記事も見つけました。\nラボのタイトルを考えると、答えは明らかでした。そこで、\u0026quot;.RDP\u0026quot; を検索した結果、以下のファイルが見つかりました:\n回答: cloud zerotrust compliance.rdp\n実行 # 質問 1 # ユーザーの相互作用を分析した結果、悪意のある添付ファイルをダウンロードして実行した従業員は誰ですか？\nsourcetype を変更して、WinEventLog に切り替えます。\nWinEventLog は、Windows のイベントログで、エラー、警告、セキュリティ情報、またはアプリケーションイベントなど、システム上の様々な活動を記録し、追跡および解析を可能にします。\nindex=* sourcetype=\u0026#34;xmlwineventlog\u0026#34; cloud zerotrust compliance.rdp ここで、ファイルをダウンロードしたユーザーのユーザー名が明確に確認できます: C:\\Users\\rnichols\\Downloads\\cloud zerotrust compliance.rdp\n回答: rnichols\n質問 2 # DC マシン上で、攻撃者がメモリ内で実行した DLL タグについて、この悪意のある DLL ファイルの SHA-256 ハッシュの最初の 10 バイトは何ですか？\nまず、DC 上で PowerShell に関連する DLL をリストアップします:\nindex=* sourcetype=xmlwineventlog \u0026#34;Powershell\u0026#34; | search host=\u0026#34;DC01\u0026#34; | rex field=_raw \u0026#34;(?\u0026lt;file\u0026gt;\\b\\w{6,8}\\.\\w{3}\\b)\u0026#34; | search file=\u0026#34;*dll\u0026#34; 完全なスクリプトが 1 つのイベントに収録するには長すぎるため、セグメントに分割されていることが分かります。これは MessageNumber によって確認できます:\n2 つのイベントは同じ ActivityID {0B39225B-3C43-0001-5078-390B433CDB01} やその他の識別子を共有しており、同じスクリプト実行に属していることを示しています。\n最初のセグメント (MessageNumber = 1) には、PowerShell 環境の設定や、func_get_proc_address、func_get_delegate_type といった関数の定義など、スクリプトの冒頭部分が含まれています。\n最後のセグメント (MessageNumber = 33) には、Base64 文字列（キー 35 で XOR されたもの）のデコードや、デコードされたコードを実行するためのメモリ割り当て部分が含まれています。\nこれらのセグメントを合わせることで、メモリ内にコードを注入・実行するためのペイロード全体が再構成されます。\n再構成されたスクリプトは、難読化されたペイロード（まず Base64、次に 35 で XOR されたもの）をデコードし、ネイティブな Windows 関数（例: VirtualAlloc を介した GetProcAddress や GetDelegateForFunctionPointer）を使用してメモリを割り当て、悪意のあるコードを実行します。\n[...] $var [...] -bxor 35 [...] Splunk 検索を使用して再構成することができます:\nindex=* sourcetype=xmlwineventlog EventID=4104 0B39225B-3C43-0001-5078-390B433CDB01 | stats values(ScriptBlockText) as Script by SystemTime | table Script その後、Cyberchef を使ってスクリプトをデコードします:\nそして、問題の DLL が見つかります:\n最後に、ファイルを抽出し、そのハッシュを取得します:\n回答: 0ee6bc20a7f855d881cce962de09c77960ea5c85ca013e3d123fce61109ff8c5\nPersistence # 質問 1 # 悪意ある接続が確立された後、システム上にファイルがドロップされました。このドロップされたファイルの名前は何ですか？\n.rdp ファイルが 20:45:27 ごろに実行されたことが分かっています（実行セクションの質問 1 を参照）。\nそのため、その時刻から検索を開始します。\nまず、PowerShell コマンド（Invoke-WebRequest、curl など）を使って Splunk でダウンロードを検索してみましたが、結果は得られませんでした。\nそこで、検索クエリを以下のように変更しました:\nindex=* sourcetype=\u0026#34;xmlwineventlog\u0026#34; \u0026#34;rnichols\u0026#34; | rex field=_raw \u0026#34;CommandLine=(?\u0026lt;CommandLine\u0026gt;.*)\u0026#34; | fillnull value=\u0026#34;\u0026#34; | search NOT CommandLine=\u0026#34;\u0026lt;/Data\u0026gt;\u0026lt;/EventData\u0026gt;\u0026lt;/Event\u0026gt;\u0026#34;,\u0026#34;\u0026#34; | stats values(CommandLine) as CommandLine by _time, ParentCommandLine | sort — _time なぜこれが動作するのでしょうか？\n以下はイベントの詳細です:\nフィールド TerminalSessionId=3 は、ユーザーが RDP セッションを介して接続していたことを強く示唆しています。なぜなら:\nセッション 0 はしばしば SYSTEM に使用されます。 ローカルの対話セッションは 通常 1 から始まります。 RDP セッションはしばしばより高い ID（例: 2, 3 など）を持ちます。 explorer.exe は Windows のグラフィカルインターフェースの主要プロセスであり、対話型ユーザーが起動するプログラムのランチャーとして機能します。\nこの動作を説明する考えられるシナリオ:\n対話セッション（RDP であるかどうかにかかわらず）:\nもし rnichols が RDP 経由で接続していれば、explorer.exe はユーザーシェルとして起動し、Startup に定義されたプログラム（ztssvc.exe）を実行します。 ユーザーが物理的にログインした場合や、runas などのサービスを通じても同様の状況が発生します。 ユーザーのログイン時に自動実行:\nztssvc.exe が Startup に配置されているため、ユーザーがログインするとすぐに実行されます（ローカルログインでも RDP 経由でも）。 explorer.exe を介したインジェクションまたは永続化:\n攻撃者が Startup を利用してマルウェアを持続させた場合、explorer.exe はユーザーがログインするたびに自動的にそのバイナリを実行します。 攻撃者によるエクスプロイトまたは強制実行:\nもし explorer.exe が（例えば DLL インジェクションなどにより）改ざんされていれば、ztssvc.exe を実行するために使用された可能性があります。 回答: ztssvc.exe\n質問 2 # 長期的なアクセスを維持するために、攻撃者は侵害されたマシン上でスケジュールされたタスクを作成しました。このタスクの名前は何ですか？\nindex=* sourcetype=\u0026#34;xmlwineventlog\u0026#34; EventCode=4698 OR EventCode=4702 | search user=\u0026#34;rnichols\u0026#34; | table _time EventCode TaskName Command User | rename EventCode as \u0026#34;Event ID\u0026#34;, TaskName as \u0026#34;Scheduled Task\u0026#34;, Command as \u0026#34;Executed Command\u0026#34; | sort _time 質問 3 # 永続性戦略の一環として、攻撃者は新たなユーザーアカウントを作成しました。この不正なアカウントの名前は何ですか？\n質問 1 と同じクエリを使用します:\nindex=* sourcetype=\u0026#34;xmlwineventlog\u0026#34; \u0026#34;rnichols\u0026#34; | rex field=_raw \u0026#34;CommandLine=(?\u0026lt;CommandLine\u0026gt;.*)\u0026#34; | fillnull value=\u0026#34;\u0026#34; | search NOT CommandLine=\u0026#34;\u0026lt;/Data\u0026gt;\u0026lt;/EventData\u0026gt;\u0026lt;/Event\u0026gt;\u0026#34;,\u0026#34;\u0026#34; | stats values(CommandLine) as CommandLine by _time, ParentCommandLine | sort — _time 結果の中に、非常に怪しげなエンコードされた PowerShell コマンドが見つかります:\nこのコマンドを Cyberchef を使ってデコードしました:\n回答: Administrator\n質問 4 # リモートアクセスを容易にするため、攻撃者はリモートデスクトップの設定を変更しました。RDP (Remote Desktop Protocol) 接続の許可を決定するレジストリキーの名前は何ですか？\n多数の Windows システムの調査・管理経験から、既に答えは分かっていましたが、確認方法は以下の通りです:\n攻撃者が実行した複数の -EncodedCommand を含む PowerShell コマンドを常に検索します:\nその中で、以下のコマンドが確認できます:\n回答: fDenyTSConnections\n質問 5 # さらなる調査により、DC 上で新しいユーザーアカウントが作成されたことが判明しました。このアカウントの名前は何ですか？\nこれは他のホストで行われたのと同じ方法で実施されたと考えられます。そこで、以下のように検索します:\nindex=* sourcetype=\u0026#34;xmlwineventlog\u0026#34; host=\u0026#34;DC01\u0026#34; \u0026#34;-EncodedCommand\u0026#34; 回答: rniclos\n特権昇格 # 質問 1 # 特権昇格手法を調査した際、攻撃者が悪用した特権 COM インターフェースの CLSID の最後の 6 バイトは何ですか？\nCLSID は、Windows COM (Component Object Model) において、レジストリ内の COM オブジェクトを識別するためのグローバルに一意な識別子 (GUID) です。\n攻撃者は、特権を持つ COM インターフェースの CLSID を利用して、より高い権限でコードを実行します：\n誤設定された COM オブジェクトを悪用して特権を昇格させます。 攻撃者は regsvr32.exe、powershell、mshta.exe、または rundll32.exe を介して、特権 COM インターフェース* を作成、操作、または呼び出すことが可能です。 ここでは、マルウェアが ztssvc.exe であることが分かっているので、ztssvc.exe の実行に関連する EventCode \u0026ldquo;1\u0026rdquo;（プロセス作成）イベントを検索し、IntegrityLevel が \u0026ldquo;High\u0026rdquo; のものだけをフィルタリングします:\nindex=* sourcetype=\u0026#34;xmlwineventlog\u0026#34; EventCode=1 | search Image=\u0026#34;*ztssvc.exe*\u0026#34; | search IntegrityLevel=\u0026#34;High\u0026#34; | table _time User CommandLine IntegrityLevel ParentCommandLine | sort _time 回答: 7CE93B6DC937\n質問 2 # 特権昇格のために、攻撃者はシステム上に別のファイルをドロップしました。このファイルの名前は何ですか？\n最初のファイル（ztssvc.exe）のダウンロード後に発生したすべての動作を確認するため、同じコマンドを実行します:\nindex=* sourcetype=\u0026#34;xmlwineventlog\u0026#34; \u0026#34;rnichols\u0026#34; | rex field=_raw \u0026#34;CommandLine=(?\u0026lt;CommandLine\u0026gt;.*)\u0026#34; | fillnull value=\u0026#34;\u0026#34; | search NOT CommandLine=\u0026#34;\u0026lt;/Data\u0026gt;\u0026lt;/EventData\u0026gt;\u0026lt;/Event\u0026gt;\u0026#34;,\u0026#34;\u0026#34; | search NOT ParentCommandLine=\u0026#34;\u0026#34; | stats values(CommandLine) as CommandLine by _time, ParentCommandLine | sort — _time 回答: Akagi64.exe\n防御回避 # 質問 1 # 攻撃者は、システムの動作を変更してセキュリティ設定を弱体化させようと試みました。管理者ユーザー向けのユーザーアカウント制御 (UAC) プロンプト設定を管理するレジストリキーの名前は何ですか？\nこの回答は、先に観察されたエンコードされた PowerShell コマンド内に見つかります:\n回答: ConsentPromptBehaviorAdmin\n質問 2 # 検出を回避するため、攻撃者はタグを保護されたシステムディレクトリに移動させました。この移動された悪意あるファイルの名前は何ですか？\n移動が行われた場合、ファイルの作成または名前変更のイベント (Event ID 11 または 2) が発生しているはずです。\nindex=* sourcetype=xmlwineventlog EventCode=11 OR EventCode=2 \u0026#34;rnichols\u0026#34; | search TargetFilename=\u0026#34;C:\\\\Windows\\\\System32\\\\*\u0026#34; OR TargetFilename=\u0026#34;C:\\\\Windows\\\\SysWOW64\\\\*\u0026#34; OR TargetFilename=\u0026#34;C:\\\\ProgramData\\\\*\u0026#34; | table _time User TargetFilename ProcessName | sort _time 回答: Amazon ZeroTrust Compl.exe\n発見 # 質問 1 # 侵害されたマシン上で攻撃者の最初の行動を特定するため、システム情報を収集する最初のコマンドは何でしたか？\nマシンが 20:45:27 に侵害されたことが分かっているので（実行セクションの質問 1 を参照）、その時刻から検索を開始します:\nindex=* sourcetype=\u0026#34;xmlwineventlog\u0026#34; \u0026#34;rnichols\u0026#34; | rex field=_raw \u0026#34;CommandLine=(?\u0026lt;CommandLine\u0026gt;.*)\u0026#34; | fillnull value=\u0026#34;\u0026#34; | search NOT CommandLine=\u0026#34;\u0026lt;/Data\u0026gt;\u0026lt;/EventData\u0026gt;\u0026lt;/Event\u0026gt;\u0026#34;,\u0026#34;\u0026#34; | search NOT ParentCommandLine=\u0026#34;\u0026#34; | stats values(CommandLine) as CommandLine by _time, ParentCommandLine | sort — _time 回答: whoami /groups\n横方向の移動 # 質問 1 # 攻撃者はどのツールを使用して DC への横方向の移動を行いましたか？\n再度、エンコードされた PowerShell コマンドを調査する必要があります。今回は、Amazon ZeroTrust Compl.exe によって発行されたコマンドです:\npowershell -nop -exec bypass -EncodedCommand UwBlAHQALQBJAHQAZQBtACAAVwBTAE0AYQBuADoAXABsAG8AYwBhAGwAaABvAHMAdABcAEMAbABpAGUAbgB0AFwAVAByAHUAcwB0AGUAZABIAG8AcwB0AHMAIAAtAFYAYQBsAHUAZQAgACIARABDADAAMQAuAGEAZAAuAGkAbgBmAGkAbgBuAGkAdABlAGMAaABzAG8AbAB1AHQAZQBuAHMALgB4AHkAegAiACAALQBGAG8AcgBjAGUA このコマンドは、IT01 上の Windows Remote Management (WinRM) の設定を変更し、DC01.ad.infinitechsolutions.xyz をリモート接続用に信頼するようにしています。これは、PowerShell リモーティング（WinRM）を介した横方向の移動の強い指標です。\n回答: WinRM\nコマンド＆コントロール # 質問 1 # 攻撃者の活動をたどると、悪意のあるメールが送信された元の IP アドレスは何でしたか？\nフィッシングメールを送信したユーザーを検索することで、最初の質問に戻ります:\nindex=* sourcetype=syslog \u0026#34;User twhite@infinitechsolutions.xyz\u0026#34; 回答: 3.78.253.99\n質問 2 # cloud zerotrust compliance.rdp が IT01 で実行され、送信者のメール IP アドレスが判明しているため、以下のクエリで直接テストできます:\nindex=* sourcetype=xmlwineventlog (EventCode=1 OR EventCode=3) | search host=\u0026#34;IT01\u0026#34; | search DestinationPort=3389 AND DestinationIp=3.78.253.99 | table _time User DestinationIp DestinationPort | sort _time 回答: 3.78.253.99:3389\n質問 3 # 解析の結果、ドロップされたファイルが Cobalt Strike のビーコンとして機能していることが明らかになりました。このビーコンが通信するコマンド＆コントロール (C\u0026amp;C) サーバーのエンドポイントは何ですか？\nまず、どのファイルが Cobalt Strike のビーコンであるかを確認します:\nその後、Amazon ZeroTrust Compl.exe がどの IP/ポートに接続したかを調査します:\nindex=* sourcetype=xmlwineventlog EventCode=3 | search Image=\u0026#34;*Amazon ZeroTrust Compl.exe*\u0026#34; | search NOT DestinationIp=\u0026#34;\u0026#34; | table _time User Image DestinationIp DestinationPort Protocol | sort _time (EventCode 3 は、Windows マシン上のプロセスが確立したネットワーク接続に対応します)\n回答: 3.78.244.11:8080\n質問 4 # DLL の設定を調査すると、ビーコンの通信を指示する \u0026lsquo;C2Server\u0026rsquo; キーにはどのような値が設定されていますか？\nVirusTotal に戻り、「Behavior」タブでこの情報を確認します。\n回答: 3.78.244.11,/dot.gif\nLab 完了！\n","date":"2 mars 2025","externalUrl":null,"permalink":"/blog-cyber/ja/posts/midnight-rdp/","section":"Posts","summary":"シナリオ # InfiniTech Solutions の IT 従業員が、自身のメールアカウントに関連する異常なアクティビティを報告しました。調査の結果、その従業員の業務用認証情報が、最近のデータ漏洩により流出していたことが判明しました。","title":"Midnight RDP Lab","type":"posts"},{"content":"","date":"2 mars 2025","externalUrl":null,"permalink":"/blog-cyber/ja/tags/splunk/","section":"Tags","summary":"","title":"Splunk","type":"tags"},{"content":"","date":"2 mars 2025","externalUrl":null,"permalink":"/blog-cyber/ja/tags/threat-hunting/","section":"Tags","summary":"","title":"Threat Hunting","type":"tags"},{"content":"","date":"19 mai 2024","externalUrl":null,"permalink":"/blog-cyber/tags/android-forensic/","section":"Tags","summary":"","title":"Android Forensic","type":"tags"},{"content":"","date":"19 mai 2024","externalUrl":null,"permalink":"/blog-cyber/tags/autopsy/","section":"Tags","summary":"","title":"Autopsy","type":"tags"},{"content":"","date":"19 mai 2024","externalUrl":null,"permalink":"/blog-cyber/tags/medium/","section":"Tags","summary":"","title":"Medium","type":"tags"},{"content":" Scénario # Nous avons réussi à confirmer la localisation de l\u0026rsquo;acteur malveillant qui a compromis le réseau WiFi de notre gouvernement.\nRécemment, un raid à l\u0026rsquo;aube dans le cadre de l\u0026rsquo;OP ERADICATE a été mené à une adresse dans la capitale vélorienne et une quantité considérable d\u0026rsquo;éléments de preuve a été saisie. On notera en particulier un appareil Android appartenant à l\u0026rsquo;agent, dont on pense qu\u0026rsquo;il se trouvait sur le lieu de l\u0026rsquo;attaque.\nNous avons besoin de votre expertise pour analyser cet appareil et répondre aux questions détaillées ci-dessous. Vous n\u0026rsquo;avez pas beaucoup de temps, une réunion du COBR vélorien a été organisée pour discuter de vos résultats\u0026hellip;\nFichiers # opshieldwall2.zip contenant \u0026ldquo;EVIDENCE-CASE-RAVENSKIAN-AGENT-002\u0026rdquo; où on le retrouve le dossier \u0026ldquo;data\u0026rdquo; et \u0026ldquo;storage\u0026rdquo; d\u0026rsquo;un Android Cela nous laisse pas mal de marge de manœuvre, en effet, le /data contient énormément d\u0026rsquo;informations telles que :\nCheatsheet SANS FOR585 Avant propos # Avant de commencer, voici quelques informations importantes sur Android :\nLes données utilisateur peuvent être stockées en interne et en externe sur Android. Les données internes sont enregistrées dans la mémoire flash NAND, une mémoire non volatile qui conserve les données même en cas de coupure d\u0026rsquo;alimentation. La NAND stocke le bootloader, le système d\u0026rsquo;exploitation et les données utilisateur. Les données des applications sont stockées sur la mémoire flash NAND ou sur la carte SD.\nAndroid est basé sur des variantes des branches LTS (long-term support) du Kernel Linux. Avec Android v8 (Oreo), Google a imposé l\u0026rsquo;utilisation de la version 4.4 ou supérieur du Kernel Linux. Par exemple Android v9 (Pie) fonctionne sur les versions 4.4, 4.9 ou 4.14 selon l\u0026rsquo;appareil. Plus d\u0026rsquo;info disponnible sur le wiki d\u0026rsquo;Android OS https://source.android.com/docs/core/architecture/kernel/android-common?hl=fr.\nandroid-mainline est la principale branche de développement des fonctionnalités Android. La ligne principale Linux est fusionnée avec android-mainline chaque fois que Linus Torvalds publie une version ou une version candidate :\nOn retrouve principalement ces systèmes de fichiers :\nEXT4 F2FS YAFFS2 exFAT La plupart des artefacts sont des DB SQLite et des fichiers XML. Android isole les applications au niveau du Kernel, leur attribuant un identifiant unique (UID) pour suivre les applications exécutées.\nAndroid Architecture # Le noyau Linux constitue la base d\u0026rsquo;Android, supportant des fonctionnalités cruciales telles que les threads et la gestion de la mémoire de bas niveau utilisées par Android Runtime (ART).\nLe HAL fournit des interfaces standardisées qui exposent les fonctionnalités matérielles aux API Java de niveau supérieur. Il est composé de modules de bibliothèque spécifiques à chaque composant matériel (comme la caméra ou le Bluetooth). Lorsqu\u0026rsquo;une API accède au matériel, Android charge le module de bibliothèque correspondant\nL\u0026rsquo;environnement d\u0026rsquo;exécution Android (Android Runtime dit ART) exécute chaque application dans son propre processus et instance. Gérant plusieurs machines virtuelles sur des appareils à faible mémoire grâce au bytecode DEX spécialement conçu et optimisé pour Android. Les outils de compilation comme d8 transforment le code Java en bytecode DEX pour l\u0026rsquo;exécution sur Android.\nDe nombreux composants et services système Android essentiels, tels qu\u0026rsquo;ART et HAL, sont créés à partir de code natif nécessitant des bibliothèques natives écrites en C et C++.\nLes fonctionnalités d\u0026rsquo;Android sont accessibles via des API Java, facilitant la réutilisation des principaux composants et services système modulaires comme les notifications, la gestion des ressources et la localisation.\nLes applications système sont l\u0026rsquo;ensemble des applications de base fournies avec Android.\nAndroid Virtual Machine # Les VM sont utilisés comme couches d\u0026rsquo;abstraction entre une application et l\u0026rsquo;appareil Android sous-jacent.\nChaque application fonctionne dans sa propre instance dans une VM, isolant les applications les unes des autres.\nLes applications Android sont écrites en Java mais sont compilées et compilées en bytecode Java.\nCe bytecode est ensuite transformé en bytecode Dalvik (fichiers .dex) ou bytecode ART.\nDalvik et ART exécutent le bytecode (.dex) dans une machine virtuelle, permettant aux applications de fonctionner indépendamment du matériel sous-jacent.\nAvant KitKat (v.4.4), Android utilisait des VM Dalvik.\nAvec Lollipop (v5.0), Android a commencé à utiliser Android Runtime (ART) et a cessé d\u0026rsquo;utiliser la VM Dalvik.\nLes deux environnements d\u0026rsquo;exécution Dalvik et ART fonctionnent avec le bytecode DEX, mais ART possède de nouvelles fonctionnalités d\u0026rsquo;optimisation.\nDirectory structure # /cache : peut contenir des pièces jointes gmail, des téléchargements, des données de navigation et des mises à jour OTA /efs : contient des fichiers nécessaires au fonctionnement de l\u0026rsquo;appareil en cas de défaillance /data : /data/data : contient les dossiers des applications (/data/data/com.example.app), les fichiers de configurations des apps, les DB SQLite des apps, leurs logs, cache etc. /app : contient des fichiers .apk du marché Android *Des malwares peuvent être trouvés ici /backup : stocke l\u0026rsquo;API de sauvegarde pour les développeurs donc les données de sauvegarde des utilisateurs ne sont pas stockées ici /media : l\u0026rsquo;emplacement de stockage interne équivalent à une carte SD. *Des malwares malveillants peuvent être trouvés ici /misc : les fichiers liés à Bluetooth, dhcp, vpn, Wi-Fi, etc. sont stockés ici /system : contient des fichiers clés tels que gesture.key et passwords.key ; le fichier accounts.db qui contient les usernames et les mots de passe pour l\u0026rsquo;authentification des fichiers etc. /property : contient les propriétés du système, y compris le fuseau horaire, les paramètres de langue, etc. /mnt : /asec : stocke les données non chiffrés des apps /DCIM : stocke les thumbnails des albums /Pictures : stocke les images de l\u0026rsquo;appareil photo /downloads : fichiers téléchargés localement /secure/asec : stocke les données chiffrés des apps /system : /app : contient des fichiers .apk. *Des malwares peuvent être trouvés ici /priv-app : contient des fichiers \u0026amp; apk avec des permissions au niveau du système. *Des malwares peuvent être trouvés ici Pour avoir plus d\u0026rsquo;informations sur\nles permissions des app : https://developer.android.com/guide/topics/permissions/overview?hl=fr ; https://blog.mindorks.com/what-are-the-different-protection-levels-in-android-permission/ la CLI d\u0026rsquo;Android : https://developer.android.com/tools/adb?hl=fr Setup # Au vu des fichiers et du scénario, je vais utiliser l\u0026rsquo;outil Autopsy. Cela peut prendre un peu de temps à ce setup, c\u0026rsquo;est pour cela que j\u0026rsquo;attaque cela ici.\nSi vous ne connaissez pas Autopsy, voici une briève description :\nAutopsy est un outil d\u0026rsquo;investigation numérique opensource. Il se rapporte à l\u0026rsquo;interface graphique du Sleuth Kit et d\u0026rsquo;autres outils de forensic. Il est utilisé pour analyser des disques durs et des smartphones dans le cadre d\u0026rsquo;enquêtes. Les fonctionnalités clés d\u0026rsquo;Autopsy incluent la récupération de fichiers supprimés, l\u0026rsquo;analyse des métadonnées, la recherche par mots-clés, la visualisation des timelines d\u0026rsquo;activités, et l\u0026rsquo;analyse des systèmes de fichiers etc.\nPour l\u0026rsquo;utiliser, nous devons créer une \u0026ldquo;Case\u0026rdquo; :\nIci, nous savons que nous n\u0026rsquo;avons pas à faire à une \u0026ldquo;Disk Image\u0026rdquo; ou à une VM, de même pour un disque local. Nous choisissons donc l\u0026rsquo;option appropriée \u0026ldquo;Logical Files\u0026rdquo; :\nOn attend qu\u0026rsquo;Autopsy \u0026amp; ses modules terminent l\u0026rsquo;ingestion. Cela peut prendre un moment.\nC\u0026rsquo;est bon, on peut commencer l\u0026rsquo;investigation :\nQuestions # Question 1 # Quelle est l\u0026rsquo;adresse mail de l\u0026rsquo;agent qui a été utilisée dans diverses applications/services ?\nPour y répondre, je vais utiliser le rapport qu\u0026rsquo;Autopsy a généré via ALEAPP (Android Logs Events And Protobuf Parser), un projet open-source qui vise à analyser tous les artefacts Android connus à des fins d\u0026rsquo;analyse forensic.\nPour trouver rapidement et simplement nous pouvons chercher dans :\n/data/data/com.android.vending/databases/library.db pour y trouver le compte google utilisé pour download des apps /data/data/com.android.providers.contacts/databases/contacts2.db pour y trouver le compte google utilisé pour synchroniser ses contacts Mais aussi (mais non applicable sur ce challenge) ici :\n/data/com.android.vending/shared_prefs/lastaccount.xml (dernier compte utilisé sur Google PlayStore (Android 9 et plus)) /data/com.google.android.gms/shared_prefs/BackupAccount.xml (email du compte de backup) /data/com.android.email/databases/EmailProvider.db (email accounts, 3rd party app data et les messages associés aux notifications par emails) Enfin bref, on se retrouve donc avec le rapport en format html :\nOn peut retrouver son adresse mail un peu partout.\nDans l\u0026rsquo;app \u0026ldquo;Chrome\u0026rdquo; par exemple avec la partie \u0026ldquo;Autofill\u0026rdquo; (fonctionnalité qui permet de remplir automatiquement des formulaires avec des informations préenregistrées) :\nDans les \u0026ldquo;Login Data\u0026rdquo; de Chrome :\nEnfin dans la partie \u0026ldquo;Installed Apps (Library)\u0026rdquo; nous retrouvons l\u0026rsquo;adresse mail du compte google utilisé pour download des apps :\nRéponse : olegpachinksy@gmail.com\nQuestion 2 # Quel est le numéro de contact du gestionnaire (handler) affecté à l\u0026rsquo;agent qui a été arrêté ?\nDans la partie \u0026ldquo;Contacts\u0026rdquo; :\nRéponse : +323145232315\nQuestion 3 # Récupérer les identifiants et le lien du portail officiel des agents ravenskiens. Cela peut nous donner un avantage en matière de renseignement car nous pouvons utiliser cet accès pour obtenir d\u0026rsquo;autres informations exploitables sur les opérations que le gouvernement ravenskien planifie.\nNous avons déjà trouvé la réponse à cette question à la question n°1 via les \u0026ldquo;Login Data\u0026rdquo; de Chrome :\nRéponse : agent.ravensk.idu.com:olegpachinksy007:HBLKNKD0MADsdfsa2334(*\u0026amp;DSMDB\nQuestion 4 # Quel est le code de contact utilisé pour confirmer l\u0026rsquo;identité de l\u0026rsquo;agent et du gestionnaire lors de l\u0026rsquo;utilisation d\u0026rsquo;un canal de discussion sécurisé ?\nPremièrement je vais vérifier les potentiels SMS ici : /data/data/com.android.providers.telephony/databases/mmssms.db.\nNous n\u0026rsquo;y trouvons rien.\nNous pourrions aussi chercher ici mais non applicable sur ce challenge :\n/data/com.google.android.gms/databases/icing_mmssms.db (SMS/MMS) /data/com.google.android.gms/databases/ipa_mmssms.db (SMS/MMS) Nous devons donc trouver l\u0026rsquo;app de messagerie utilisé. On peut voir toutes les apps installées dans la partie \u0026ldquo;Installed Programs\u0026rdquo; d\u0026rsquo;Autopsy :\nOn y trouve différente catégorie :\nInstalled Apps (GMS) Installed Apps (Library) Installed Apps (Vending) Installed Apps - GMS : Cette catégorie concerne les applications installées sur l\u0026rsquo;appareil, quel que soit leur mode d\u0026rsquo;installation. On peut retrouver ces données ici : /data/com.google.android.gms/databases/.\nInstalled Apps - Library : Cette catégorie se réfère à la bibliothèque d\u0026rsquo;applications pour l\u0026rsquo;utilisateur Google utilisant l\u0026rsquo;appareil. Il est important de noter que cette DB n\u0026rsquo;est pas liée aux applications installées sur l\u0026rsquo;appareil, elle peut contenir des applications installées par le même compte Google sur un autre appareil ou sur une précédente installation de l\u0026rsquo;appareil analysé. On peut retrouver ces données ici : /data/com.android.vending/databases/.\nInstalled Apps - Vending : Cette catégorie concerne spécifiquement les applications installées sur l\u0026rsquo;appareil via le Google Play Store, excluant celles installées par d\u0026rsquo;autres moyens. Ces données ne sont pas supprimées lorsque l\u0026rsquo;application est désinstallée. Elles sont stockées dans une DB SQLite située ici : /data/com.android.vending/databases/.\nPour plus de lisibilité retournons sur ALEAPP et concentrons-nous sur les apps de type \u0026ldquo;Vending\u0026rdquo; :\nL\u0026rsquo;app qui saute au yeux c\u0026rsquo;est mega.privacy.android.app. Et en effet, c\u0026rsquo;est une application de messagerie :\nJustement ALEAPP a parsé les messages échangés via MEGA :\nOn peut retrouver ces infomations ici : /data/data/mega.privacy.android.app/karere-TU1IaTh4TUJpdTQKAfO_2P0qU8NMP7zDRlgv.db.\nRéponse : REDAPPLEONACAR\nQuestion 5 # Le gestionnaire a partagé un document avec l\u0026rsquo;agent en utilisant un service de stockage cloud. Quand ce fichier a-t-il été partagé avec l\u0026rsquo;agent ?\nRien dans les messages. Le document a donc dû être transmis d\u0026rsquo;une autre manière. Nous savons qu\u0026rsquo;il n\u0026rsquo;y a pas d\u0026rsquo;autre app de messagerie et qu\u0026rsquo;il n\u0026rsquo;a pas pu lui communiquer via SMS/MMS.\nDans les app installé nous avons vu com.google.android.apps.docs. Allons donc chercher ici : \\data\\data\\com.google.android.apps.docs.\nOn y trouve la DB /data/data/com.google.android.apps.docs/app_cello/olegpachinksy@gmail.com/cello.db contenant ces informations :\nOn peut d\u0026rsquo;ailleurs retrouver ce fichier ici : EVIDENCE-CASE-RAVENSKIAN-AGENT-002/storage/emulated/0/Download/Debrief-Velorian OP Expansion East.pdf :\nNéanmoins attention, par défaut Autopsy interprète les timestamps avec la time zone de votre ordinateur. Pensez bien à modifier ce paramètre dans Autopsy (Tools \u0026gt; Options \u0026gt; View \u0026gt; Time Zone).\nRéponse : 2024-04-01 09:36:41\nQuestion 6 # Quel est l\u0026rsquo;URI de téléchargement du fichier partagé précédemment identifié ?\nNous savons que le fichier a été téléchargé car nous l\u0026rsquo;avons retrouvé dans /storage/emulated/0/Download/.\nNous pouvons donc chercher dans /data/data/com.android.providers.downloads/databases/downloads.db :\nRéponse : https://www.googleapis.com/drive/v2internal/files/1iQKKlBU2vuJD1Xet6IYPt7IODVtDHxv1?alt=media\u0026amp;source=downloadUrl\u0026amp;auditContext=fileAction\u0026amp;reason=909\u0026amp;syncType=1\u0026amp;featureLabel=android-sync-classic\u0026amp;openDrive=false\u0026amp;errorRecovery=false\u0026amp;originatorApp=102\nQuestion 7 # Afin d\u0026rsquo;obtenir davantage d\u0026rsquo;informations pour le contre-espionnage de Veloria, quel était l\u0026rsquo;objectif principal de cette cyber-opération menée par le gouvernement de Ravensk ?\nRevenons au document :\nRéponse : Infiltrate the Velorian secured network to gather intelligence on upcoming cyber-attacks, their techniques, and target countries.\nQuestion 8 # L\u0026rsquo;identification du gestionnaire est également cruciale pour que les forces de l\u0026rsquo;ordre véloriennes puissent comprendre l\u0026rsquo;étendue de cette opération. Quelle est l\u0026rsquo;adresse électronique utilisée par le manipulateur ?\nNous l\u0026rsquo;avons déjà vu dans les messages de l\u0026rsquo;app MEGA :\nRéponse : ivoryalex783@gmail.com\nQuestion 9 # Quel est le nom de l\u0026rsquo;endroit où l\u0026rsquo;agent et le gestionnaire se sont rencontrés ?\nRevenons aux messages :\nC\u0026rsquo;est la question qui m\u0026rsquo;a pris le plus de temps, j\u0026rsquo;ai dû bloquer une bonne heure dessus.\nPremièrement, j\u0026rsquo;ai cherché dans les endroits habituels :\n/data/com.google.android.apps.maps/databases/gmm_storage.db /data/com.google.android.apps.maps/databases/search_history.db /data/com.google.android.apps.maps/databases/da_destination_history /data/com.sec.android.daemonapp/db/weatherClock /data/com.google.android.apps.maps/app_tts-cache/ /data/com.google.android.apps.maps/cache/image_manager_disk_cache/ Après n\u0026rsquo;avoir rien trouvé, je me suis dit qu\u0026rsquo;il était sans doute possible que la réponse soit dans les metadatas des images sur le téléphone. En effet, on retrouve 48 images dont plusieurs de bar :\nNéanmoins, rien de probant.\nJe me suis donc posé plusieurs questions :\nil y a-t-il d\u0026rsquo;autres applications de navigation / localisation sur le téléphone ? est-il sûr que je dois chercher dans l\u0026rsquo;app Google Maps ? Non, seulement Google Maps. Non, il est peut-être possible qu\u0026rsquo;il ait fait la recherche sur son navigateur et non sur l\u0026rsquo;app etc. Ayant déjà vérifié les points habituels des artefacts de google maps j\u0026rsquo;ai préféré chercher dans le navigateur mais je n\u0026rsquo;ai rien trouvé.\nJe suis donc retourné fouiller dans les artefacts de google maps :\napp : RAS app_offline_downloads : RAS app_offline_hashes : RAS app_textures : RAS app_webview : RAS cache : RAS databases : trop de fichiers, j\u0026rsquo;y reviendrai plus tard files : \u0026ldquo;new_recent_history_cache_search.cs\u0026rdquo; Je me rends compte que j\u0026rsquo;aurais simplement pu chercher par mot-clé \u0026ldquo;Pub\u0026rdquo; 🤡\nRéponse : Levstik Pub\nQuestion 10 # D\u0026rsquo;après le chat retrouvé entre l\u0026rsquo;agent et le gestionnaire, il semble que ce dernier ait envoyé à l\u0026rsquo;agent arrêté une image relative à l\u0026rsquo;infrastructure utilisée par le gouvernement ravenskien pour cette opération de cyberespionnage. Quel est le cadre C2 utilisé par le gouvernement ravenskien ?\nAyant déjà vérifié toutes les images pour répondre à la question 9 j\u0026rsquo;ai déjà la réponse.\nRéponse : Empire\nQuestion 11 # La collecte d\u0026rsquo;informations sur l\u0026rsquo;infrastructure, telles que les adresses IP ou les noms d\u0026rsquo;hôtes, est cruciale pour les autorités véloriennes, qui préparent une opération de contre-offensive. D\u0026rsquo;après l\u0026rsquo;image récupérée envoyée par le gestionnaire à l\u0026rsquo;agent, quelle est l\u0026rsquo;adresse IP de l\u0026rsquo;un des serveurs C2 exploités par les acteurs de la menace ravenskiens ?\nRéponse : 98.24.12.45\n","date":"19 mai 2024","externalUrl":null,"permalink":"/blog-cyber/posts/opshieldwall-2/","section":"Posts","summary":"Scénario # Nous avons réussi à confirmer la localisation de l\u0026rsquo;acteur malveillant qui a compromis le réseau WiFi de notre gouvernement.","title":"OpShieldWall-2","type":"posts"},{"content":"","date":"19 mai 2024","externalUrl":null,"permalink":"/blog-cyber/tags/sherlock/","section":"Tags","summary":"","title":"Sherlock","type":"tags"},{"content":"","date":"19 mai 2024","externalUrl":null,"permalink":"/blog-cyber/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"7 mai 2024","externalUrl":null,"permalink":"/blog-cyber/tags/easy/","section":"Tags","summary":"","title":"Easy","type":"tags"},{"content":"","date":"7 mai 2024","externalUrl":null,"permalink":"/blog-cyber/tags/network-forensic/","section":"Tags","summary":"","title":"Network Forensic","type":"tags"},{"content":" Scénario # Merci d\u0026rsquo;avoir répondu à notre appel. Le ministère de la Défense de Velorian a désespérément besoin d\u0026rsquo;aide\u0026hellip;\nNous devons rester discrets, mais nous pensons que le Wi-Fi public des bureaux du ministère de la Défense de Velorian a été compromis. L\u0026rsquo;impact semble faible, mais les diagrammes du réseau montrent qu\u0026rsquo;aucune segmentation réelle du réseau n\u0026rsquo;a été réalisée et que le trafic entre les appareils est autorisé. Les ministres du gouvernement utilisent ce réseau avec des équipements BYoD et des hôtes Velorian MoDNet. Veuillez analyser le pcap fourni et confirmer comment et quand cela s\u0026rsquo;est produit. N\u0026rsquo;oubliez pas que cette enquête est de type TLP Amber.\nFichiers # opshieldwall1.zip contenant la capture réseau \u0026ldquo;VELORIA-NETWORK.pcap\u0026rdquo; Setup # Au vu de la simplicité de ce challenge, on peut simplement se limiter à tshark / wireshark.\nQuestions # Question 1 # Veuillez confirmer le SSID de notre réseau WiFi.\nPremièrement, familiarisez-nous avec la capture. Nous allons utiliser la commande suivante afin d\u0026rsquo;avoir des statistiques :\n$ tshark -r traffic.pcapng -qz -r permet de lire (read) un fichier -q permet d\u0026rsquo;être plus \u0026ldquo;quiet\u0026rdquo; à la sortie (utile pour les stats car cela permet d\u0026rsquo;afficher les statistiques globales, et non par paquet.) -z permet l\u0026rsquo;affichage de statistiques Il y a beaucoup de valeurs possible (tshark -z help pour les afficher) mais ici nous souhaitons avant tout savoir :\nle nombre de paquet la durée de la capture les IPv4 avec le plus de paquet les IPv4 endpoints échangeant ensemble le plus les protocoles les plus utilisés Nombre de paquet et durée : 106 ; 31.6 sec\n$ tshark -r VELORIA-NETWORK.pcap -qz io,stat,0 =================================== | IO Statistics | | | | Duration: 31.6 secs | | Interval: 31.6 secs | | | | Col 1: Frames and bytes | |---------------------------------| | |1 | | | Interval | Frames | Bytes | | |-------------------------------| | | 0.0 \u0026lt;\u0026gt; 31.6 | 106 | 20759 | | =================================== IPv4 endpoints :\navec le plus de paquet : $ tshark -r VELORIA-NETWORK.pcap -qz endpoints,ip ================================================================================ IPv4 Endpoints Filter:\u0026lt;No Filter\u0026gt; | Packets | | Bytes | | Tx Packets | | Tx Bytes | | Rx Packets | | Rx Bytes | 0.0.0.0 3 1044 3 1044 0 0 255.255.255.255 3 1044 0 0 3 1044 10.0.3.1 3 1048 3 1048 0 0 10.0.3.52 3 1048 0 0 3 1048 ================================================================================ échangeant le plus : tshark -r VELORIA-NETWORK.pcap -qz conv,ip ================================================================================ IPv4 Conversations Filter:\u0026lt;No Filter\u0026gt; | \u0026lt;- | | -\u0026gt; | | Total | Relative | Duration | | Frames Bytes | | Frames Bytes | | Frames Bytes | Start | | 0.0.0.0 \u0026lt;-\u0026gt; 255.255.255.255 0 0 bytes 3 1044 bytes 3 1044 bytes 23.256576000 8.3680 10.0.3.1 \u0026lt;-\u0026gt; 10.0.3.52 0 0 bytes 3 1048 bytes 3 1048 bytes 23.256959000 8.3693 ================================================================================ Protocoles les plus utilisés :\ntshark -r VELORIA-NETWORK.pcap -qz io,phs =================================================================== Protocol Hierarchy Statistics Filter: sll frames:106 bytes:20759 radiotap frames:92 bytes:17572 wlan_radio frames:92 bytes:17572 wlan frames:92 bytes:17572 wlan.mgt frames:92 bytes:17572 eapol frames:6 bytes:999 eap frames:6 bytes:999 ip frames:6 bytes:2092 udp frames:6 bytes:2092 dhcp frames:6 bytes:2092 arp frames:2 bytes:96 =================================================================== Pour répondre à la question, il suffit d\u0026rsquo;utiliser la commande :\n$ tshark -r VELORIA-NETWORK.pcap -T fields -e wlan.ssid | head -n 1 | xxd -r -p VELORIA-MoD-AP012 Explication : (https://www.wireshark.org/docs/dfref/w/wlan.html)\n-t affiche uniquement les champs spécifiés par l\u0026rsquo;utilisateur (nécessite donc forcément l\u0026rsquo;utilisation de l\u0026rsquo;option -e pour spécifier les champs). -e wlan.ssid spécifie que le champ wlan.ssid (SSID des réseaux sans fil) doit être extrait et affiché. -xxd -r -p l\u0026rsquo;output étant une suite hexadécimale, cela permet de le convertir en texte lisible Réponse : VELORIA-MoD-AP012\nQuestion 2 # Veuillez confirmer l\u0026rsquo;adresse MAC du point d\u0026rsquo;accès (AP).\ntshark -r VELORIA-NETWORK.pcap -T fields -e wlan.sa | head -n 1 02:00:00:00:01:00 Réponse : 02:00:00:00:01:00\nQuestion 3 # Veuillez confirmer l\u0026rsquo;état/le mécanisme d\u0026rsquo;authentification de l\u0026rsquo;AP et le vecteur d\u0026rsquo;attaque.\nPassons à Wireshark.\nRéponse : WPS\nQuestion 4 # Quel est le numéro de paquet où l\u0026rsquo;attaque a-t-elle commencé ?\nOn peut facilement en déduire que c\u0026rsquo;est à la première tentative de connexion (étant les seuls dans la capture).\nRéponse : 93\nQuestion 5 # Quel est le numéro de paquet où l\u0026rsquo;attaque s\u0026rsquo;est-elle terminée ?\nOn peut facilement en déduire que c\u0026rsquo;est lorsque l\u0026rsquo;authentifcation a échoué.\nRéponse : 8\n","date":"7 mai 2024","externalUrl":null,"permalink":"/blog-cyber/posts/opshieldwall-1/","section":"Posts","summary":"Scénario # Merci d\u0026rsquo;avoir répondu à notre appel.","title":"OpShieldWall-1","type":"posts"},{"content":" Diplômes # Les images sont des liens cliquables.\nEn cours Mastère (BAC+5) - Expert de la sécurité des données, des réseaux et des systèmes\nUniquement en alternance\nhttps://www.francecompetences.fr/recherche/rncp/38951/ Bachelor (BAC+3) - Cybersécurité \u0026 Ethical Hacking\n3ème année en alternance\nMention - Très bien Bachelor (BAC+3) - Concepteur de Systèmes d'Information Mention - Très bien Liste de tous les challenges, labs, box etc. que j\u0026rsquo;ai effectué mais aussi des cours, conférences et trainings auquels j\u0026rsquo;ai assisté :\nHackTheBox # Iron = Insane Red = Hard Orange = Medium Green = Easy Purple = Very Easy Certaines images ne redirigent pas vers les pages de résultat d\u0026rsquo;HTB car se sont des boxs / sherlocks uniquement disponibles sur la plateforme HackTheBox Entreprise (qui ne permet pas de faire des liens de partage).\nSherlock # DFIR / SOC # OpShieldWall-7 Heartbreaker Trent APTNightmare OpShieldWall-4 OpShieldWall-2 OpShieldWall-1 Jingle Bell Recollection Noted Tracer Log Jammer Rogue One CrownJewel-2 CrownJewel-1 Brutus Malware Analysis # OpShieldWall-6 Loggy Heartbreaker Cloud # Nubilum-2 Box # Linux # OpShieldWall-5 OpShieldWall-3 Blurry Runner IClean Perfection BoardLight Headless Wifinetic MetaTwo Lame Nibbles Precious Windows # Jerry Netmon Blue HackTheBox Academy # Transcript.pdf\nRootMe # Cyberdefenders # Threat Hunting # Hard Network Forensics # Hard Medium Medium Medium Medium Medium Easy Easy Easy Easy Easy Easy Easy Easy Endpoint Forensics # Medium Easy Threat Intel # Medium Medium Easy Easy Easy Easy Cloud Forensics # Easy TryHackMe # 92 rooms complétés\nPath :\nPre Security Complete Beginner Web Fundamentals Comptia Pentest+ Cours # OALABS : Reverse Engineering 101 (RE101) Evasive Malware : A Field Guide to Detecting, Analyzing, and Defeating Advanced Threats (Kyle Cucci - no starch press) Kaspersky : Advanced Malware Analysis Techniques Kaspersky : Hunting APTs like a Ninja with YARA 13Cubed : Investigating Windows Endpoint 13Cubed : Investigating Windows Memory Roman Stuehler : Android App Hacking - Black Belt Edition Pentherz : Intro to SDR Hacking Christopher Negus : Linux Bible OSINT (Open Source Intelligence Techniques) : IntelTechniques Opdisk : The Cyber Plumber\u0026rsquo;s Handbook Conf \u0026amp; meetups # 2024 # DEFCON Paris Meetups HTB France 2023 # Hexacon DEFCON Paris LeHack Meetups HTB France ","date":"6 mai 2024","externalUrl":null,"permalink":"/blog-cyber/posts/portfolio/","section":"Posts","summary":"Diplômes # Les images sont des liens cliquables.","title":"Portfolio","type":"posts"},{"content":"Liste des projets que j\u0026rsquo;ai effecuté.\nSelf-Hosted Infrastructure # Juin 2023 - maintenant\nProfessional Server (HP ProLiant DL380 Gen9 2U) sous Proxmox Firewall sous OPNsense Self-hosted services et tools: VPN, Security Onion, Wazuh, Cuckoo Sandbox, GitLab, VM pour CTF, labs en tout genre (red team / blue team\u0026hellip;) Un lab spécial de Malware Analysis \u0026amp; d\u0026rsquo;OSINT avec une emphase sur la sécurité, la vie privée et l\u0026rsquo;OPSEC Architecture, network segmentation, intégration IPS/IDS, load balancing, SRE, VPN CTF Challenge Creator # Juin 2024 - Juin 2024\nCréation de deux challenges de radio (misc easy and medium) pour le \u0026ldquo;PwnMe CTF 2024\u0026rdquo;.\nhttps://ctftime.org/ctf/807/\nhttps://www.phreaks2600.fr/\nSide Quest - Toolkit Network Forensic \u0026amp; Malware Analysis # Févr. 2024 - Juin 2024\nNotre side quest est un projet collaboratif d\u0026rsquo;étudiants pour fournir un toolkit puissant pour la forensique réseau et l\u0026rsquo;analyse de malware. Ce repository contient deux sous-projets qui se concentrent sur différents aspects de l\u0026rsquo;investigation :\nNetwork Forensic Analysis : Outils d\u0026rsquo;analyse du trafic réseau capturé dans des fichiers PCAP. Analyse des malwares : Outils permettant de disséquer les fichiers binaires afin de découvrir des informations cachées et de détecter des caractéristiques malveillantes. https://github.com/jaybird1291/toolkit-network-forensic-malware-analysis-sidequest\n","date":"5 mai 2024","externalUrl":null,"permalink":"/blog-cyber/posts/projets/","section":"Posts","summary":"Liste des projets que j\u0026rsquo;ai effecuté.","title":"Projets","type":"posts"},{"content":"","externalUrl":null,"permalink":"/blog-cyber/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/blog-cyber/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/blog-cyber/series/","section":"Series","summary":"","title":"Series","type":"series"}]